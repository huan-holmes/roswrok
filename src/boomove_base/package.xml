<package>
    <name>boomove_base</name>
    <version>1.13.0</version>
    <description>

        The boomove_base package provides an implementation of an action (see the <a href="http://www.ros.org/wiki/actionlib">actionlib</a> package) that, given a goal in the world, will attempt to reach it with a mobile base. The boomove_base node links together a global and local planner to accomplish its global navigation task. It supports any global planner adhering to the nav_core::BaseGlobalPlanner interface specified in the <a href="http://www.ros.org/wiki/nav_core">nav_core</a> package and any local planner adhering to the nav_core::BaseLocalPlanner interface specified in the <a href="http://www.ros.org/wiki/nav_core">nav_core</a> package. The boomove_base node also maintains two costmaps, one for the global planner, and one for a local planner (see the <a href="http://www.ros.org/wiki/costmap_2d">costmap_2d</a> package) that are used to accomplish navigation tasks.

    </description>
    <author>Eitan Marder-Eppstein</author>
    <author>contradict@gmail.com</author>
    <maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer>
    <maintainer email="mferguson@fetchrobotics.com">Michael Ferguson</maintainer>
    <license>BSD</license>
    <url>http://wiki.ros.org/move_base</url>

    <buildtool_depend>catkin</buildtool_depend>

    <build_depend>actionlib_msgs</build_depend>
    <run_depend>actionlib_msgs</run_depend>

    <!--build_depend>AgvTrajectoryMsg</build_depend>
    <run_depend>AgvTrajectoryMsg</run_depend-->

    <run_depend>message_runtime</run_depend>
    <build_depend>boo_local_planner</build_depend>
    <run_depend>boo_local_planner</run_depend>
    <build_depend>teb_local_planner</build_depend>
    <run_depend>teb_local_planner</run_depend>
    <build_depend>actionlib</build_depend>
    <build_depend>cmake_modules</build_depend>
    <build_depend>boocostmap_2d</build_depend>
    <build_depend>geometry_msgs</build_depend>
    <build_depend>message_generation</build_depend>
    <build_depend>nav_msgs</build_depend>
    <build_depend>pluginlib</build_depend>
    <build_depend>roscpp</build_depend>
    <build_depend>rospy</build_depend>
    <build_depend>std_msgs</build_depend>
    <build_depend>std_srvs</build_depend>
    <build_depend>tf</build_depend>
    <build_depend>visualization_msgs</build_depend>


<!--  This is commented out until rotate_recovery is ported to layered costmaps. <build_depend>rotate_recovery</build_depend> -->

    <run_depend>actionlib</run_depend>
    <run_depend>boocostmap_2d</run_depend>
    <run_depend>geometry_msgs</run_depend>
    <run_depend>message_runtime</run_depend>
    <run_depend>nav_msgs</run_depend>
    <run_depend>pluginlib</run_depend>
    <run_depend>roscpp</run_depend>
    <run_depend>rospy</run_depend>
    <run_depend>std_msgs</run_depend>
    <run_depend>std_srvs</run_depend>
    <run_depend>tf</run_depend>
    <run_depend>visualization_msgs</run_depend>


  <build_depend>angles</build_depend>
  <build_depend>nav_core</build_depend>
  <run_depend>nav_core</run_depend>

</package>
